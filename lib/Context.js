"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
class Context {
    constructor(data, config, options) {
        this.bundles = {};
        this.data = data;
        this.config = config;
        this.options = options;
        (this.options.bundles || []).forEach(bundle => {
            this.addBundle(bundle);
        });
    }
    getData() {
        return this.data;
    }
    getConfig() {
        return this.config;
    }
    getOptions() {
        return this.options;
    }
    getComponent(type, name, defaultName) {
        let x = name;
        let bundle = Object.values(this.bundles).find(bundle => bundle.hasComponent(type, x));
        if (!bundle) {
            x = defaultName;
            bundle = Object.values(this.bundles).find(bundle => bundle.hasComponent(type, x));
            if (!bundle) {
                throw new Error(`Unknown component '${name}' of type '${type}' (no default component '${defaultName}' as well)`);
            }
        }
        return bundle.getComponent(type, name);
    }
    addBundle(bundle) {
        this.bundles[bundle.getName()] = bundle;
        return this;
    }
    getBundle(name) {
        if (!this.hasBundle(name)) {
            throw new Error(`Unknown bundle '${name}'`);
        }
        return this.bundles[name];
    }
    hasBundle(name) {
        return !!this.bundles[name];
    }
}
exports.Context = Context;
exports.default = Context;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGV4dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Db250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUlBLE1BQWEsT0FBTztJQUtoQixZQUFZLElBQVUsRUFBRSxNQUFjLEVBQUUsT0FBZ0I7UUFKdkMsWUFBTyxHQUFnQyxFQUFFLENBQUM7UUFLdkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDMUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFDRCxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFDRCxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7SUFDRCxZQUFZLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxXQUFtQjtRQUN4RCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDYixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RGLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVCxDQUFDLEdBQUcsV0FBVyxDQUFDO1lBQ2hCLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xGLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1QsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsSUFBSSxjQUFjLElBQUksNEJBQTRCLFdBQVcsWUFBWSxDQUFDLENBQUM7YUFDcEg7U0FDSjtRQUNELE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUNELFNBQVMsQ0FBQyxNQUFrQjtRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUV4QyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQ0QsU0FBUyxDQUFDLElBQVk7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsSUFBSSxHQUFHLENBQUMsQ0FBQztTQUMvQztRQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsU0FBUyxDQUFDLElBQVk7UUFDbEIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUFqREQsMEJBaURDO0FBRUQsa0JBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IElQZGZCdW5kbGUgZnJvbSBcIi4vSUJ1bmRsZVwiO1xuaW1wb3J0IElDb250ZXh0IGZyb20gXCIuL0lDb250ZXh0XCI7XG5pbXBvcnQge2RhdGEsIGNvbmZpZywgb3B0aW9uc30gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBDb250ZXh0IGltcGxlbWVudHMgSUNvbnRleHQge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgYnVuZGxlczoge1trZXk6IHN0cmluZ106IElQZGZCdW5kbGV9ID0ge307XG4gICAgcHJpdmF0ZSByZWFkb25seSBkYXRhOiBkYXRhO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY29uZmlnOiBjb25maWc7XG4gICAgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBvcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGRhdGE6IGRhdGEsIGNvbmZpZzogY29uZmlnLCBvcHRpb25zOiBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICAodGhpcy5vcHRpb25zLmJ1bmRsZXMgfHwgW10pLmZvckVhY2goYnVuZGxlID0+IHtcbiAgICAgICAgICAgIHRoaXMuYWRkQnVuZGxlKGJ1bmRsZSk7XG4gICAgICAgIH0pXG4gICAgfVxuICAgIGdldERhdGEoKTogZGF0YSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgfVxuICAgIGdldENvbmZpZygpOiBjb25maWcge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWc7XG4gICAgfVxuICAgIGdldE9wdGlvbnMoKTogb3B0aW9ucyB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnM7XG4gICAgfVxuICAgIGdldENvbXBvbmVudCh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgZGVmYXVsdE5hbWU6IHN0cmluZykge1xuICAgICAgICBsZXQgeCA9IG5hbWU7XG4gICAgICAgIGxldCBidW5kbGUgPSBPYmplY3QudmFsdWVzKHRoaXMuYnVuZGxlcykuZmluZChidW5kbGUgPT4gYnVuZGxlLmhhc0NvbXBvbmVudCh0eXBlLCB4KSk7XG4gICAgICAgIGlmICghYnVuZGxlKSB7XG4gICAgICAgICAgICB4ID0gZGVmYXVsdE5hbWU7XG4gICAgICAgICAgICBidW5kbGUgPSBPYmplY3QudmFsdWVzKHRoaXMuYnVuZGxlcykuZmluZChidW5kbGUgPT4gYnVuZGxlLmhhc0NvbXBvbmVudCh0eXBlLCB4KSk7XG4gICAgICAgICAgICBpZiAoIWJ1bmRsZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb21wb25lbnQgJyR7bmFtZX0nIG9mIHR5cGUgJyR7dHlwZX0nIChubyBkZWZhdWx0IGNvbXBvbmVudCAnJHtkZWZhdWx0TmFtZX0nIGFzIHdlbGwpYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ1bmRsZS5nZXRDb21wb25lbnQodHlwZSwgbmFtZSk7XG4gICAgfVxuICAgIGFkZEJ1bmRsZShidW5kbGU6IElQZGZCdW5kbGUpIHtcbiAgICAgICAgdGhpcy5idW5kbGVzW2J1bmRsZS5nZXROYW1lKCldID0gYnVuZGxlO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXRCdW5kbGUobmFtZTogc3RyaW5nKTogSVBkZkJ1bmRsZSB7XG4gICAgICAgIGlmICghdGhpcy5oYXNCdW5kbGUobmFtZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBidW5kbGUgJyR7bmFtZX0nYCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5idW5kbGVzW25hbWVdO1xuICAgIH1cbiAgICBoYXNCdW5kbGUobmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMuYnVuZGxlc1tuYW1lXTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRleHQ7Il19